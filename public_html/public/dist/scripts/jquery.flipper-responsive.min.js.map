{"version":3,"sources":["scripts/jquery.flipper-responsive.min.js"],"names":["jQuery","$","String","prototype","repeat","count","this","TypeError","str","RangeError","Infinity","Math","floor","length","rpt","i","padStart","targetLength","padString","fn","flipper","action","options","$flipper","settings","extend","datetime","data","template","labels","slice","preload","hasClass","warn","addClass","split","templateParts","forEach","part","index","append","console","$part","find","labelsArray","n","rev","reverse","setFlipperDate","setInterval","upsizeToParent","window","on","flipTime","parentWidth","flipperWidth","maxFontSize","current","parseInt","next","$digit","$next","fontSize","removeClass","setTimeout","$currentTop","$currentTop2","innerWidth","$currentBottom","toString","attr","w","removeAttr","outerWidth","css","html","hide","minFontSize","dateString","each","animate","is","flipDigit","a","d","Date","now","seconds","formatFlipperDate","minutes","getMinutes","hours","getHours","date","remainder","parse","t","value","remove","prepend","minutes_str","seconds_str","days","days_str","hours_str","timestamp","setDigitValue","currentValue","getDigitValue","parseFloat","closest","$activeDigit","prev","$lastDigit","$prevDigit","$nextDigit","$firstDigit","show"],"mappings":"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","file":"jquery.flipper-responsive.min.js","sourcesContent":["jQuery(function($){\r\n\r\n  // https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\r\n  if (!String.prototype.repeat) {\r\n    String.prototype.repeat = function(count) {\r\n      'use strict';\r\n      if (this == null) {\r\n        throw new TypeError('can\\'t convert ' + this + ' to object');\r\n      }\r\n      var str = '' + this;\r\n      count = +count;\r\n      if (count != count) {\r\n        count = 0;\r\n      }\r\n      if (count < 0) {\r\n        throw new RangeError('repeat count must be non-negative');\r\n      }\r\n      if (count == Infinity) {\r\n        throw new RangeError('repeat count must be less than infinity');\r\n      }\r\n      count = Math.floor(count);\r\n      if (str.length == 0 || count == 0) {\r\n        return '';\r\n      }\r\n      // Обеспечение того, что count является 31-битным целым числом, позволяет нам значительно\r\n      // соптимизировать главную часть функции. Впрочем, большинство современных (на август\r\n      // 2014 года) браузеров не обрабатывают строки, длиннее 1 << 28 символов, так что:\r\n      if (str.length * count >= 1 << 28) {\r\n        throw new RangeError('repeat count must not overflow maximum string size');\r\n      }\r\n      var rpt = '';\r\n      for (var i = 0; i < count; i++) {\r\n        rpt += str;\r\n      }\r\n      return rpt;\r\n    }\r\n  }\r\n\r\n  // https://github.com/uxitten/polyfill/blob/master/string.polyfill.js\r\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\r\n  if (!String.prototype.padStart) {\r\n    String.prototype.padStart = function padStart(targetLength,padString) {\r\n      targetLength = targetLength>>0; //truncate if number or convert non-number to 0;\r\n      padString = String((typeof padString !== 'undefined' ? padString : ' '));\r\n      if (this.length > targetLength) {\r\n        return String(this);\r\n      }\r\n      else {\r\n        targetLength = targetLength-this.length;\r\n        if (targetLength > padString.length) {\r\n          padString += padString.repeat(targetLength/padString.length); //append to original to ensure we are longer than needed\r\n        }\r\n        return padString.slice(0,targetLength) + String(this);\r\n      }\r\n    };\r\n  }\r\n\r\n  $.fn.flipper = function(action, options) {\r\n    var $flipper = $(this);\r\n    var action = action || 'init';\r\n    var settings = $.extend({\r\n      // defaults.\r\n      reverse: $flipper.data('reverse') || false,\r\n      datetime: $flipper.data('datetime') || 'now',\r\n      template: $flipper.data('template') || 'HH:ii:ss',\r\n      labels: $flipper.data('labels') || 'Hours|Minutes|Seconds',\r\n      preload: true\r\n    }, options );\r\n\r\n    if(action === 'init'){\r\n      if($flipper.hasClass('flipper-initialized')){\r\n        console.warn('Flipper already initialized.');\r\n        return;\r\n      }\r\n      $flipper.addClass( \"flipper-initialized\" );\r\n\r\n      var templateParts = settings.template.split('|');\r\n      var labelsArray = settings.labels.split('|');\r\n      var n;\r\n\r\n      templateParts.forEach(function(part, index){\r\n        if(index > 0){\r\n          $flipper.append('<div class=\"flipper-group flipper-delimiter\">:</div>');\r\n        }\r\n        $flipper.append('<div class=\"flipper-group flipper-' + part + '\"></div>');\r\n        var $part = $flipper.find('.flipper-group.flipper-' + part);\r\n        if(typeof labelsArray[index] !== 'undefined'){\r\n          $part.append('<label>' + labelsArray[index] + '</label>');\r\n        }\r\n        if(part === 'd' || part === 'H' || part === 'i' || part === 's'){\r\n          var rev = settings.reverse ? 'reverse' : '';\r\n          $part.append('<div class=\"flipper-digit ' + rev + '\"></div>');\r\n        }\r\n        if(part === 'dd' || part === 'ddd' || part === 'HH' || part === 'ii' || part === 'ss'){\r\n          var rev = settings.reverse ? 'reverse' : '';\r\n          $part.append('<div class=\"flipper-digit ' + rev + '\"></div>');\r\n          $part.append('<div class=\"flipper-delimiter\"></div>');\r\n          $part.append('<div class=\"flipper-digit ' + rev + '\"></div>');\r\n          if(part === 'ddd'){\r\n            $part.append('<div class=\"flipper-delimiter\"></div>');\r\n            $part.append('<div class=\"flipper-digit ' + rev + '\"></div>');\r\n          }\r\n        }\r\n        if(part === 'd'){\r\n          for(n = 0; n <= 31; n++){\r\n            $part.find('.flipper-digit:eq(0)').append('<div class=\"digit-face\">' + n + '</div>');\r\n            $part.find('.flipper-digit:eq(1)').append('<div class=\"digit-face\">' + n + '</div>');\r\n          }\r\n        }\r\n        if(part === 'H'){\r\n          for(n = 0; n <= 23; n++){\r\n            $part.find('.flipper-digit:eq(0)').append('<div class=\"digit-face\">' + n + '</div>');\r\n            $part.find('.flipper-digit:eq(1)').append('<div class=\"digit-face\">' + n + '</div>');\r\n          }\r\n        }\r\n        if(part === 'i' || part === 's'){\r\n          for(n = 0; n <= 59; n++){\r\n            $part.find('.flipper-digit:eq(0)').append('<div class=\"digit-face\">' + n + '</div>');\r\n            $part.find('.flipper-digit:eq(1)').append('<div class=\"digit-face\">' + n + '</div>');\r\n          }\r\n        }\r\n        if(part === 'dd' || part === 'ddd'){\r\n          for(n = 0; n <= 9; n++){\r\n            $part.find('.flipper-digit:eq(0)').append('<div class=\"digit-face\">' + n + '</div>');\r\n            $part.find('.flipper-digit:eq(1)').append('<div class=\"digit-face\">' + n + '</div>');\r\n            if(part === 'ddd'){\r\n              $part.find('.flipper-digit:eq(2)').append('<div class=\"digit-face\">' + n + '</div>');\r\n            }\r\n          }\r\n        }\r\n        if(part === 'HH'){\r\n          for(n = 0; n <= 2; n++){\r\n            $part.find('.flipper-digit:eq(0)').append('<div class=\"digit-face\">' + n + '</div>');\r\n          }\r\n          for(n = 0; n <= 9; n++){\r\n            $part.find('.flipper-digit:eq(1)').append('<div class=\"digit-face\">' + n + '</div>');\r\n          }\r\n        }\r\n        if(part === 'ii' || part === 'ss'){\r\n          for(n = 0; n <= 5; n++){\r\n            $part.find('.flipper-digit:eq(0)').append('<div class=\"digit-face\">' + n + '</div>');\r\n          }\r\n          for(n = 0; n <= 9; n++){\r\n            $part.find('.flipper-digit:eq(1)').append('<div class=\"digit-face\">' + n + '</div>');\r\n          }\r\n        }\r\n      });\r\n\r\n      if(settings.preload){\r\n        setFlipperDate($flipper, settings.datetime, false);\r\n      }\r\n\r\n      setInterval(function(){\r\n        setFlipperDate($flipper, settings.datetime, true);\r\n      }, 1000);\r\n\r\n      upsizeToParent($flipper);\r\n      $(window).on(\"resize\", function(){\r\n        upsizeToParent($flipper);\r\n      });\r\n    }\r\n\r\n    var flipTime = 400;\r\n    var $body = $('body');\r\n\r\n    function flipDigit($digit){\r\n      if(!$digit.closest('.flipper').is('.flipper-initialized')){\r\n        return;\r\n      }\r\n      if($digit.hasClass('r')){\r\n        setTimeout(function(){\r\n          flipDigit($digit);\r\n        }, flipTime + 1);\r\n        return;\r\n      }\r\n      $digit.addClass('r');\r\n\r\n      var $currentTop = $digit.find('.digit-top');\r\n      var $currentTop2 = $digit.find('.digit-top2');\r\n      var $currentBottom = $digit.find('.digit-bottom');\r\n      var $activeDigit = $digit.find('.digit-face.active');\r\n      var $firstDigit = $digit.find('.digit-face:first');\r\n      var $prevDigit = $activeDigit.prev('.digit-face');\r\n      var $nextDigit = $activeDigit.next('.digit-face');\r\n      var $lastDigit = $digit.find('.digit-face:last');\r\n      if($digit.hasClass('reverse')){\r\n        var $next = $prevDigit.length ? $prevDigit : $lastDigit;\r\n      }\r\n      else {\r\n        var $next = $nextDigit.length ? $nextDigit : $firstDigit;\r\n      }\r\n      var current = parseInt($currentTop.html());\r\n      var next = $next.html();\r\n      $digit.find('.digit-next').html(next);\r\n      $digit.find('.digit-face').removeClass('active');\r\n      $next.addClass('active');\r\n      $currentTop.addClass('r');\r\n      $currentTop2.addClass('r');\r\n      $currentBottom.addClass('r');\r\n      if(next.toString() === $digit.attr('data-value')){\r\n        $digit.removeAttr('data-value');\r\n      }\r\n      setTimeout(function(){\r\n        $currentTop.html(next).hide();\r\n        $currentTop2.html(next);\r\n        setTimeout(function(){\r\n          $currentBottom.html(next).removeClass('r');\r\n          $currentTop.removeClass('r').show();\r\n          $currentTop2.html(next).removeClass('r');\r\n          $digit.removeClass('r');\r\n        }, flipTime/2);\r\n      }, flipTime/2);\r\n    }\r\n\r\n    function upsizeToParent($flipper) {\r\n      var parentWidth;\r\n      var flipperWidth;\r\n      var maxFontSize = 1000;\r\n      var fontSize = maxFontSize;\r\n      var i = 0;\r\n      var minFontSize = 0;\r\n      $flipper.css('font-size', fontSize + 'px');\r\n      while(i < 20){\r\n        i++;\r\n        parentWidth = $flipper.innerWidth();\r\n        $flipper.css('width', '9999px');\r\n        flipperWidth = 0;\r\n        $flipper.find('.flipper-group').each(function(){\r\n          var w = parseFloat($(this).outerWidth());\r\n          flipperWidth += w;\r\n        });\r\n        if((parentWidth - flipperWidth) < 10 && (parentWidth - flipperWidth) > 0){\r\n          $flipper.css('width', '');\r\n          return;\r\n        }\r\n        if(flipperWidth > parentWidth){\r\n          maxFontSize = fontSize < maxFontSize ? fontSize: maxFontSize;\r\n        }\r\n        else {\r\n          minFontSize = fontSize > minFontSize ? fontSize : minFontSize;\r\n        }\r\n        fontSize = (maxFontSize + minFontSize) / 2;\r\n        $flipper.css('width', '');\r\n        $flipper.css('font-size', fontSize + 'px');\r\n      }\r\n    }\r\n\r\n    function setDigitValue(digitIndex, value){\r\n      var $flipper = $('.flipper');\r\n      var $digit = $flipper.find('.flipper-digit:eq(' + digitIndex + ')');\r\n      var currentValue = getDigitValue($digit);\r\n      if(currentValue.toString() === value.toString()){\r\n        return; // has same value, do nothing\r\n      }\r\n      $digit.attr('data-value', value);\r\n    }\r\n\r\n    setInterval(function(){\r\n      var $flipper = $('.flipper');\r\n      $flipper.find('.flipper-digit[data-value]').each(function(){\r\n        var $digit = $(this);\r\n        if($digit.find('.active').html() === $digit.attr('data-value')){\r\n          return; //\r\n        }\r\n        if(!$digit.is('.r')){\r\n          flipDigit($digit);\r\n        }\r\n      });\r\n    }, flipTime / 4);\r\n\r\n    function formatFlipperDate(dateStr) {\r\n      var a=dateStr.split(\" \");\r\n      var d=a[0].split(\"-\");\r\n      var t=a[1].split(\":\");\r\n      var date = new Date(d[0],(d[1]-1),d[2],t[0],t[1],t[2]);\r\n      return date;\r\n    }\r\n\r\n    function addAppearance($flipper){\r\n      $flipper.find('.flipper-digit').each(function(){\r\n        var $digit = $(this);\r\n        var value = $digit.find('.digit-face.active').html();\r\n        $digit.find('.digit-top').remove();\r\n        $digit.find('.digit-top2').remove();\r\n        $digit.find('.digit-bottom').remove();\r\n        $digit.find('.digit-next').remove();\r\n        $digit.prepend('<div class=\"digit-top\">' + value + '</div>');\r\n        $digit.prepend('<div class=\"digit-top2\">' + value + '</div>');\r\n        $digit.prepend('<div class=\"digit-bottom\">' + value + '</div>');\r\n        $digit.prepend('<div class=\"digit-next\"></div>');\r\n      });\r\n    }\r\n\r\n    function setFlipperDate($flipper, dateString, animate){\r\n      var animate = animate || false;\r\n      if(!$flipper.is(':visible')){\r\n        $flipper.addClass('flipper-invisible');\r\n        return;\r\n      }\r\n      if($flipper.hasClass('flipper-invisible')){\r\n        $flipper.removeClass('flipper-invisible');\r\n        upsizeToParent($flipper);\r\n        setFlipperDate($flipper, settings.datetime, false);\r\n      }\r\n      var now = Date.now();\r\n      if(dateString === 'now'){\r\n        var now = new Date();\r\n        var seconds = now.getSeconds();\r\n        var minutes = now.getMinutes();\r\n        var hours = now.getHours();\r\n        var days = now.getDate();\r\n      }\r\n      else {\r\n        var timestamp = Date.parse(formatFlipperDate(dateString));\r\n        var remainder = (timestamp - now) / 1000;\r\n        var days = Math.floor(remainder / 60 / 60 / 24);\r\n        remainder -= days * 60 * 60 * 24;\r\n        var hours = Math.floor(remainder / 60 / 60);\r\n        remainder -= hours * 60 * 60;\r\n        var minutes = Math.floor(remainder / 60);\r\n        remainder -= minutes * 60;\r\n        var seconds = Math.floor(remainder);\r\n      }\r\n\r\n      var days_str = days.toString().padStart(3, '0');\r\n      var hours_str = hours.toString().padStart(2, '0');\r\n      var minutes_str = minutes.toString().padStart(2, '0');\r\n      var seconds_str = seconds.toString().padStart(2, '0');\r\n\r\n      if(animate){\r\n        // one section\r\n        $flipper.find('.flipper-d').find('.flipper-digit:eq(0)').attr('data-value', days);\r\n        $flipper.find('.flipper-H').find('.flipper-digit:eq(0)').attr('data-value', hours);\r\n        $flipper.find('.flipper-i').find('.flipper-digit:eq(0)').attr('data-value', minutes);\r\n        $flipper.find('.flipper-s').find('.flipper-digit:eq(0)').attr('data-value', seconds);\r\n\r\n        // two sections\r\n        $flipper.find('.flipper-dd').find('.flipper-digit:eq(0)').attr('data-value', days_str[1]);\r\n        $flipper.find('.flipper-dd').find('.flipper-digit:eq(1)').attr('data-value', days_str[2]);\r\n        $flipper.find('.flipper-HH').find('.flipper-digit:eq(0)').attr('data-value', hours_str[0]);\r\n        $flipper.find('.flipper-HH').find('.flipper-digit:eq(1)').attr('data-value', hours_str[1]);\r\n        $flipper.find('.flipper-ii').find('.flipper-digit:eq(0)').attr('data-value', minutes_str[0]);\r\n        $flipper.find('.flipper-ii').find('.flipper-digit:eq(1)').attr('data-value', minutes_str[1]);\r\n        $flipper.find('.flipper-ss').find('.flipper-digit:eq(0)').attr('data-value', seconds_str[0]);\r\n        $flipper.find('.flipper-ss').find('.flipper-digit:eq(1)').attr('data-value', seconds_str[1]);\r\n\r\n        // three sections\r\n        $flipper.find('.flipper-ddd').find('.flipper-digit:eq(0)').attr('data-value', days_str[0]);\r\n        $flipper.find('.flipper-ddd').find('.flipper-digit:eq(1)').attr('data-value', days_str[1]);\r\n        $flipper.find('.flipper-ddd').find('.flipper-digit:eq(2)').attr('data-value', days_str[2]);\r\n      }\r\n      else {\r\n        $flipper.find('.flipper-group .flipper-digit').removeAttr('data-value');\r\n        $flipper.find('.digit-face.active').removeClass('active');\r\n\r\n        // one section\r\n        $flipper.find('.flipper-d .flipper-digit:eq(0) .digit-face:contains(' + days + ')').addClass('active');\r\n        $flipper.find('.flipper-H .flipper-digit:eq(0) .digit-face:contains(' + hours + ')').addClass('active');\r\n        $flipper.find('.flipper-i .flipper-digit:eq(0) .digit-face:contains(' + minutes + ')').addClass('active');\r\n        $flipper.find('.flipper-s .flipper-digit:eq(0) .digit-face:contains(' + seconds + ')').addClass('active');\r\n\r\n        // two sections\r\n        $flipper.find('.flipper-dd .flipper-digit:eq(0) .digit-face:contains(' + days_str[1] + ')').addClass('active');\r\n        $flipper.find('.flipper-dd .flipper-digit:eq(1) .digit-face:contains(' + days_str[2] + ')').addClass('active');\r\n        $flipper.find('.flipper-HH .flipper-digit:eq(0) .digit-face:contains(' + hours_str[0] + ')').addClass('active');\r\n        $flipper.find('.flipper-HH .flipper-digit:eq(1) .digit-face:contains(' + hours_str[1] + ')').addClass('active');\r\n        $flipper.find('.flipper-ii .flipper-digit:eq(0) .digit-face:contains(' + minutes_str[0] + ')').addClass('active');\r\n        $flipper.find('.flipper-ii .flipper-digit:eq(1) .digit-face:contains(' + minutes_str[1] + ')').addClass('active');\r\n        $flipper.find('.flipper-ss .flipper-digit:eq(0) .digit-face:contains(' + seconds_str[0] + ')').addClass('active');\r\n        $flipper.find('.flipper-ss .flipper-digit:eq(1) .digit-face:contains(' + seconds_str[1] + ')').addClass('active');\r\n\r\n        // three sections\r\n        $flipper.find('.flipper-ddd .flipper-digit:eq(0) .digit-face:contains(' + days_str[0] + ')').addClass('active');\r\n        $flipper.find('.flipper-ddd .flipper-digit:eq(1) .digit-face:contains(' + days_str[1] + ')').addClass('active');\r\n        $flipper.find('.flipper-ddd .flipper-digit:eq(2) .digit-face:contains(' + days_str[2] + ')').addClass('active');\r\n        addAppearance($flipper);\r\n      }\r\n\r\n    }\r\n  };\r\n\r\n});"]}