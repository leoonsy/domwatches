{"version":3,"sources":["scripts/jquery.flipper-responsive.min.js"],"names":["jQuery","$","String","prototype","repeat","count","this","TypeError","str","RangeError","Infinity","Math","floor","length","rpt","i","padStart","targetLength","padString","fn","flipper","action","options","$flipper","settings","extend","datetime","data","template","labels","slice","preload","console","log","reverse","warn","addClass","split","templateParts","forEach","part","index","hasClass","append","$part","find","labelsArray","n","rev","setFlipperDate","setInterval","upsizeToParent","window","on","flipTime","$next","$nextDigit","parentWidth","flipperWidth","current","parseInt","next","$digit","$currentTop","fontSize","$currentTop2","$currentBottom","innerWidth","css","removeAttr","each","w","parseFloat","outerWidth","setTimeout","html","removeClass","maxFontSize","minFontSize","dateString","animate","flipDigit","a","now","Date","formatFlipperDate","seconds","dateStr","getSeconds","minutes","getMinutes","date","days","getDate","addAppearance","d","t","remainder","prepend","toString","hours_str","hours","minutes_str","seconds_str","attr","days_str","currentValue","getDigitValue","remove","value","is","closest","prev","$activeDigit","$lastDigit","$prevDigit","$firstDigit","hide"],"mappings":"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","file":"jquery.flipper-responsive.min.js","sourcesContent":["jQuery(function($){\r\n\r\n  // https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\r\n  if (!String.prototype.repeat) {\r\n    String.prototype.repeat = function(count) {\r\n      'use strict';\r\n      if (this == null) {\r\n        throw new TypeError('can\\'t convert ' + this + ' to object');\r\n      }\r\n      var str = '' + this;\r\n      count = +count;\r\n      if (count != count) {\r\n        count = 0;\r\n      }\r\n      if (count < 0) {\r\n        throw new RangeError('repeat count must be non-negative');\r\n      }\r\n      if (count == Infinity) {\r\n        throw new RangeError('repeat count must be less than infinity');\r\n      }\r\n      count = Math.floor(count);\r\n      if (str.length == 0 || count == 0) {\r\n        return '';\r\n      }\r\n      // Обеспечение того, что count является 31-битным целым числом, позволяет нам значительно\r\n      // соптимизировать главную часть функции. Впрочем, большинство современных (на август\r\n      // 2014 года) браузеров не обрабатывают строки, длиннее 1 << 28 символов, так что:\r\n      if (str.length * count >= 1 << 28) {\r\n        throw new RangeError('repeat count must not overflow maximum string size');\r\n      }\r\n      var rpt = '';\r\n      for (var i = 0; i < count; i++) {\r\n        rpt += str;\r\n      }\r\n      return rpt;\r\n    }\r\n  }\r\n\r\n  // https://github.com/uxitten/polyfill/blob/master/string.polyfill.js\r\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\r\n  if (!String.prototype.padStart) {\r\n    String.prototype.padStart = function padStart(targetLength,padString) {\r\n      targetLength = targetLength>>0; //truncate if number or convert non-number to 0;\r\n      padString = String((typeof padString !== 'undefined' ? padString : ' '));\r\n      if (this.length > targetLength) {\r\n        return String(this);\r\n      }\r\n      else {\r\n        targetLength = targetLength-this.length;\r\n        if (targetLength > padString.length) {\r\n          padString += padString.repeat(targetLength/padString.length); //append to original to ensure we are longer than needed\r\n        }\r\n        return padString.slice(0,targetLength) + String(this);\r\n      }\r\n    };\r\n  }\r\n\r\n  $.fn.flipper = function(action, options) {\r\n    var $flipper = $(this);\r\n    var action = action || 'init';\r\n    var settings = $.extend({\r\n      // defaults.\r\n      reverse: $flipper.data('reverse') || false,\r\n      datetime: $flipper.data('datetime') || 'now',\r\n      template: $flipper.data('template') || 'HH:ii:ss',\r\n      labels: $flipper.data('labels') || 'Hours|Minutes|Seconds',\r\n      preload: true\r\n    }, options );\r\n\r\n    console.log(settings.reverse);\r\n\r\n    if(action === 'init'){\r\n      if($flipper.hasClass('flipper-initialized')){\r\n        console.warn('Flipper already initialized.');\r\n        return;\r\n      }\r\n      $flipper.addClass( \"flipper-initialized\" );\r\n\r\n      var templateParts = settings.template.split('|');\r\n      var labelsArray = settings.labels.split('|');\r\n      var n;\r\n\r\n      templateParts.forEach(function(part, index){\r\n        if(index > 0){\r\n          $flipper.append('<div class=\"flipper-group flipper-delimiter\">:</div>');\r\n        }\r\n        $flipper.append('<div class=\"flipper-group flipper-' + part + '\"></div>');\r\n        var $part = $flipper.find('.flipper-group.flipper-' + part);\r\n        if(typeof labelsArray[index] !== 'undefined'){\r\n          $part.append('<label>' + labelsArray[index] + '</label>');\r\n        }\r\n        if(part === 'd' || part === 'H' || part === 'i' || part === 's'){\r\n          var rev = settings.reverse ? 'reverse' : '';\r\n          $part.append('<div class=\"flipper-digit ' + rev + '\"></div>');\r\n        }\r\n        if(part === 'dd' || part === 'ddd' || part === 'HH' || part === 'ii' || part === 'ss'){\r\n          var rev = settings.reverse ? 'reverse' : '';\r\n          $part.append('<div class=\"flipper-digit ' + rev + '\"></div>');\r\n          $part.append('<div class=\"flipper-delimiter\"></div>');\r\n          $part.append('<div class=\"flipper-digit ' + rev + '\"></div>');\r\n          if(part === 'ddd'){\r\n            $part.append('<div class=\"flipper-delimiter\"></div>');\r\n            $part.append('<div class=\"flipper-digit ' + rev + '\"></div>');\r\n          }\r\n        }\r\n        if(part === 'd'){\r\n          for(n = 0; n <= 31; n++){\r\n            $part.find('.flipper-digit:eq(0)').append('<div class=\"digit-face\">' + n + '</div>');\r\n            $part.find('.flipper-digit:eq(1)').append('<div class=\"digit-face\">' + n + '</div>');\r\n          }\r\n        }\r\n        if(part === 'H'){\r\n          for(n = 0; n <= 23; n++){\r\n            $part.find('.flipper-digit:eq(0)').append('<div class=\"digit-face\">' + n + '</div>');\r\n            $part.find('.flipper-digit:eq(1)').append('<div class=\"digit-face\">' + n + '</div>');\r\n          }\r\n        }\r\n        if(part === 'i' || part === 's'){\r\n          for(n = 0; n <= 59; n++){\r\n            $part.find('.flipper-digit:eq(0)').append('<div class=\"digit-face\">' + n + '</div>');\r\n            $part.find('.flipper-digit:eq(1)').append('<div class=\"digit-face\">' + n + '</div>');\r\n          }\r\n        }\r\n        if(part === 'dd' || part === 'ddd'){\r\n          for(n = 0; n <= 9; n++){\r\n            $part.find('.flipper-digit:eq(0)').append('<div class=\"digit-face\">' + n + '</div>');\r\n            $part.find('.flipper-digit:eq(1)').append('<div class=\"digit-face\">' + n + '</div>');\r\n            if(part === 'ddd'){\r\n              $part.find('.flipper-digit:eq(2)').append('<div class=\"digit-face\">' + n + '</div>');\r\n            }\r\n          }\r\n        }\r\n        if(part === 'HH'){\r\n          for(n = 0; n <= 2; n++){\r\n            $part.find('.flipper-digit:eq(0)').append('<div class=\"digit-face\">' + n + '</div>');\r\n          }\r\n          for(n = 0; n <= 9; n++){\r\n            $part.find('.flipper-digit:eq(1)').append('<div class=\"digit-face\">' + n + '</div>');\r\n          }\r\n        }\r\n        if(part === 'ii' || part === 'ss'){\r\n          for(n = 0; n <= 5; n++){\r\n            $part.find('.flipper-digit:eq(0)').append('<div class=\"digit-face\">' + n + '</div>');\r\n          }\r\n          for(n = 0; n <= 9; n++){\r\n            $part.find('.flipper-digit:eq(1)').append('<div class=\"digit-face\">' + n + '</div>');\r\n          }\r\n        }\r\n      });\r\n\r\n      if(settings.preload){\r\n        setFlipperDate($flipper, settings.datetime, false);\r\n      }\r\n\r\n      setInterval(function(){\r\n        setFlipperDate($flipper, settings.datetime, true);\r\n      }, 1000);\r\n\r\n      upsizeToParent($flipper);\r\n      $(window).on(\"resize\", function(){\r\n        upsizeToParent($flipper);\r\n      });\r\n    }\r\n\r\n    var flipTime = 400;\r\n    var $body = $('body');\r\n\r\n    function flipDigit($digit){\r\n      if(!$digit.closest('.flipper').is('.flipper-initialized')){\r\n        return;\r\n      }\r\n      if($digit.hasClass('r')){\r\n        setTimeout(function(){\r\n          flipDigit($digit);\r\n        }, flipTime + 1);\r\n        return;\r\n      }\r\n      $digit.addClass('r');\r\n\r\n      var $currentTop = $digit.find('.digit-top');\r\n      var $currentTop2 = $digit.find('.digit-top2');\r\n      var $currentBottom = $digit.find('.digit-bottom');\r\n      var $activeDigit = $digit.find('.digit-face.active');\r\n      var $firstDigit = $digit.find('.digit-face:first');\r\n      var $prevDigit = $activeDigit.prev('.digit-face');\r\n      var $nextDigit = $activeDigit.next('.digit-face');\r\n      var $lastDigit = $digit.find('.digit-face:last');\r\n      if($digit.hasClass('reverse')){\r\n        var $next = $prevDigit.length ? $prevDigit : $lastDigit;\r\n      }\r\n      else {\r\n        var $next = $nextDigit.length ? $nextDigit : $firstDigit;\r\n      }\r\n      var current = parseInt($currentTop.html());\r\n      var next = $next.html();\r\n      $digit.find('.digit-next').html(next);\r\n      $digit.find('.digit-face').removeClass('active');\r\n      $next.addClass('active');\r\n      $currentTop.addClass('r');\r\n      $currentTop2.addClass('r');\r\n      $currentBottom.addClass('r');\r\n      if(next.toString() === $digit.attr('data-value')){\r\n        $digit.removeAttr('data-value');\r\n      }\r\n      setTimeout(function(){\r\n        $currentTop.html(next).hide();\r\n        $currentTop2.html(next);\r\n        setTimeout(function(){\r\n          $currentBottom.html(next).removeClass('r');\r\n          $currentTop.removeClass('r').show();\r\n          $currentTop2.html(next).removeClass('r');\r\n          $digit.removeClass('r');\r\n        }, flipTime/2);\r\n      }, flipTime/2);\r\n    }\r\n\r\n    function upsizeToParent($flipper) {\r\n      var parentWidth;\r\n      var flipperWidth;\r\n      var maxFontSize = 1000;\r\n      var fontSize = maxFontSize;\r\n      var i = 0;\r\n      var minFontSize = 0;\r\n      $flipper.css('font-size', fontSize + 'px');\r\n      while(i < 20){\r\n        i++;\r\n        parentWidth = $flipper.innerWidth();\r\n        $flipper.css('width', '9999px');\r\n        flipperWidth = 0;\r\n        $flipper.find('.flipper-group').each(function(){\r\n          var w = parseFloat($(this).outerWidth());\r\n          flipperWidth += w;\r\n        });\r\n        if((parentWidth - flipperWidth) < 10 && (parentWidth - flipperWidth) > 0){\r\n          $flipper.css('width', '');\r\n          return;\r\n        }\r\n        if(flipperWidth > parentWidth){\r\n          maxFontSize = fontSize < maxFontSize ? fontSize: maxFontSize;\r\n        }\r\n        else {\r\n          minFontSize = fontSize > minFontSize ? fontSize : minFontSize;\r\n        }\r\n        fontSize = (maxFontSize + minFontSize) / 2;\r\n        $flipper.css('width', '');\r\n        $flipper.css('font-size', fontSize + 'px');\r\n      }\r\n    }\r\n\r\n    function setDigitValue(digitIndex, value){\r\n      var $flipper = $('.flipper');\r\n      var $digit = $flipper.find('.flipper-digit:eq(' + digitIndex + ')');\r\n      var currentValue = getDigitValue($digit);\r\n      if(currentValue.toString() === value.toString()){\r\n        return; // has same value, do nothing\r\n      }\r\n      $digit.attr('data-value', value);\r\n    }\r\n\r\n    setInterval(function(){\r\n      var $flipper = $('.flipper');\r\n      $flipper.find('.flipper-digit[data-value]').each(function(){\r\n        var $digit = $(this);\r\n        if($digit.find('.active').html() === $digit.attr('data-value')){\r\n          return; //\r\n        }\r\n        if(!$digit.is('.r')){\r\n          flipDigit($digit);\r\n        }\r\n      });\r\n    }, flipTime / 4);\r\n\r\n    function formatFlipperDate(dateStr) {\r\n      var a=dateStr.split(\" \");\r\n      var d=a[0].split(\"-\");\r\n      var t=a[1].split(\":\");\r\n      var date = new Date(d[0],(d[1]-1),d[2],t[0],t[1],t[2]);\r\n      return date;\r\n    }\r\n\r\n    function addAppearance($flipper){\r\n      $flipper.find('.flipper-digit').each(function(){\r\n        var $digit = $(this);\r\n        var value = $digit.find('.digit-face.active').html();\r\n        $digit.find('.digit-top').remove();\r\n        $digit.find('.digit-top2').remove();\r\n        $digit.find('.digit-bottom').remove();\r\n        $digit.find('.digit-next').remove();\r\n        $digit.prepend('<div class=\"digit-top\">' + value + '</div>');\r\n        $digit.prepend('<div class=\"digit-top2\">' + value + '</div>');\r\n        $digit.prepend('<div class=\"digit-bottom\">' + value + '</div>');\r\n        $digit.prepend('<div class=\"digit-next\"></div>');\r\n      });\r\n    }\r\n\r\n    function setFlipperDate($flipper, dateString, animate){\r\n      var animate = animate || false;\r\n      if(!$flipper.is(':visible')){\r\n        $flipper.addClass('flipper-invisible');\r\n        return;\r\n      }\r\n      if($flipper.hasClass('flipper-invisible')){\r\n        $flipper.removeClass('flipper-invisible');\r\n        upsizeToParent($flipper);\r\n        setFlipperDate($flipper, settings.datetime, false);\r\n      }\r\n      var now = Date.now();\r\n      if(dateString === 'now'){\r\n        var now = new Date();\r\n        var seconds = now.getSeconds();\r\n        var minutes = now.getMinutes();\r\n        var hours = now.getHours();\r\n        var days = now.getDate();\r\n      }\r\n      else {\r\n        var timestamp = Date.parse(formatFlipperDate(dateString));\r\n        var remainder = (timestamp - now) / 1000;\r\n        var days = Math.floor(remainder / 60 / 60 / 24);\r\n        remainder -= days * 60 * 60 * 24;\r\n        var hours = Math.floor(remainder / 60 / 60);\r\n        remainder -= hours * 60 * 60;\r\n        var minutes = Math.floor(remainder / 60);\r\n        remainder -= minutes * 60;\r\n        var seconds = Math.floor(remainder);\r\n      }\r\n\r\n      var days_str = days.toString().padStart(3, '0');\r\n      var hours_str = hours.toString().padStart(2, '0');\r\n      var minutes_str = minutes.toString().padStart(2, '0');\r\n      var seconds_str = seconds.toString().padStart(2, '0');\r\n\r\n      if(animate){\r\n        // one section\r\n        $flipper.find('.flipper-d').find('.flipper-digit:eq(0)').attr('data-value', days);\r\n        $flipper.find('.flipper-H').find('.flipper-digit:eq(0)').attr('data-value', hours);\r\n        $flipper.find('.flipper-i').find('.flipper-digit:eq(0)').attr('data-value', minutes);\r\n        $flipper.find('.flipper-s').find('.flipper-digit:eq(0)').attr('data-value', seconds);\r\n\r\n        // two sections\r\n        $flipper.find('.flipper-dd').find('.flipper-digit:eq(0)').attr('data-value', days_str[1]);\r\n        $flipper.find('.flipper-dd').find('.flipper-digit:eq(1)').attr('data-value', days_str[2]);\r\n        $flipper.find('.flipper-HH').find('.flipper-digit:eq(0)').attr('data-value', hours_str[0]);\r\n        $flipper.find('.flipper-HH').find('.flipper-digit:eq(1)').attr('data-value', hours_str[1]);\r\n        $flipper.find('.flipper-ii').find('.flipper-digit:eq(0)').attr('data-value', minutes_str[0]);\r\n        $flipper.find('.flipper-ii').find('.flipper-digit:eq(1)').attr('data-value', minutes_str[1]);\r\n        $flipper.find('.flipper-ss').find('.flipper-digit:eq(0)').attr('data-value', seconds_str[0]);\r\n        $flipper.find('.flipper-ss').find('.flipper-digit:eq(1)').attr('data-value', seconds_str[1]);\r\n\r\n        // three sections\r\n        $flipper.find('.flipper-ddd').find('.flipper-digit:eq(0)').attr('data-value', days_str[0]);\r\n        $flipper.find('.flipper-ddd').find('.flipper-digit:eq(1)').attr('data-value', days_str[1]);\r\n        $flipper.find('.flipper-ddd').find('.flipper-digit:eq(2)').attr('data-value', days_str[2]);\r\n      }\r\n      else {\r\n        $flipper.find('.flipper-group .flipper-digit').removeAttr('data-value');\r\n        $flipper.find('.digit-face.active').removeClass('active');\r\n\r\n        // one section\r\n        $flipper.find('.flipper-d .flipper-digit:eq(0) .digit-face:contains(' + days + ')').addClass('active');\r\n        $flipper.find('.flipper-H .flipper-digit:eq(0) .digit-face:contains(' + hours + ')').addClass('active');\r\n        $flipper.find('.flipper-i .flipper-digit:eq(0) .digit-face:contains(' + minutes + ')').addClass('active');\r\n        $flipper.find('.flipper-s .flipper-digit:eq(0) .digit-face:contains(' + seconds + ')').addClass('active');\r\n\r\n        // two sections\r\n        $flipper.find('.flipper-dd .flipper-digit:eq(0) .digit-face:contains(' + days_str[1] + ')').addClass('active');\r\n        $flipper.find('.flipper-dd .flipper-digit:eq(1) .digit-face:contains(' + days_str[2] + ')').addClass('active');\r\n        $flipper.find('.flipper-HH .flipper-digit:eq(0) .digit-face:contains(' + hours_str[0] + ')').addClass('active');\r\n        $flipper.find('.flipper-HH .flipper-digit:eq(1) .digit-face:contains(' + hours_str[1] + ')').addClass('active');\r\n        $flipper.find('.flipper-ii .flipper-digit:eq(0) .digit-face:contains(' + minutes_str[0] + ')').addClass('active');\r\n        $flipper.find('.flipper-ii .flipper-digit:eq(1) .digit-face:contains(' + minutes_str[1] + ')').addClass('active');\r\n        $flipper.find('.flipper-ss .flipper-digit:eq(0) .digit-face:contains(' + seconds_str[0] + ')').addClass('active');\r\n        $flipper.find('.flipper-ss .flipper-digit:eq(1) .digit-face:contains(' + seconds_str[1] + ')').addClass('active');\r\n\r\n        // three sections\r\n        $flipper.find('.flipper-ddd .flipper-digit:eq(0) .digit-face:contains(' + days_str[0] + ')').addClass('active');\r\n        $flipper.find('.flipper-ddd .flipper-digit:eq(1) .digit-face:contains(' + days_str[1] + ')').addClass('active');\r\n        $flipper.find('.flipper-ddd .flipper-digit:eq(2) .digit-face:contains(' + days_str[2] + ')').addClass('active');\r\n        addAppearance($flipper);\r\n      }\r\n\r\n    }\r\n  };\r\n\r\n});"]}